{
  "contractName": "IERC777Sender",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "tokensToSend",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"tokensToSend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC777TokensSender standard as defined in the EIP. * `IERC777` Token holders can be notified of operations performed on their tokens by having a contract implement this interface (contract holders can be their own implementer) and registering it on the [ERC1820 global registry](https://eips.ethereum.org/EIPS/eip-1820). * See `IERC1820Registry` and `ERC1820Implementer`.\",\"methods\":{\"tokensToSend(address,address,address,uint256,bytes,bytes)\":{\"details\":\"Called by an `IERC777` token contract whenever a registered holder's (`from`) tokens are about to be moved or destroyed. The type of operation is conveyed by `to` being the zero address or not.     * This call occurs _before_ the token contract's state is updated, so `IERC777.balanceOf`, etc., can be used to query the pre-operation state.     * This function may revert to prevent the operation from being executed.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/openzeppelin-solidity/contracts/token/ERC777/IERC777Sender.sol\":\"IERC777Sender\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/openzeppelin-solidity/contracts/token/ERC777/IERC777Sender.sol\":{\"keccak256\":\"0x1782d29894a11c6a7c7f9664ff5e5a88781697127e6584bbe9d65074f4f8ab34\",\"urls\":[\"bzz-raw://6713554a7ae2ddecf39c15f307fcde21919bc7cafa1744030b6e24df15d69739\",\"dweb:/ipfs/QmP9HmHdtkNvccEbpFsEwpk6xtFdVRqCW7UgZ5eSQoB1do\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.0;\n\n/**\n * @dev Interface of the ERC777TokensSender standard as defined in the EIP.\n *\n * `IERC777` Token holders can be notified of operations performed on their\n * tokens by having a contract implement this interface (contract holders can be\n *  their own implementer) and registering it on the\n * [ERC1820 global registry](https://eips.ethereum.org/EIPS/eip-1820).\n *\n * See `IERC1820Registry` and `ERC1820Implementer`.\n */\ninterface IERC777Sender {\n    /**\n     * @dev Called by an `IERC777` token contract whenever a registered holder's\n     * (`from`) tokens are about to be moved or destroyed. The type of operation\n     * is conveyed by `to` being the zero address or not.\n     *\n     * This call occurs _before_ the token contract's state is updated, so\n     * `IERC777.balanceOf`, etc., can be used to query the pre-operation state.\n     *\n     * This function may revert to prevent the operation from being executed.\n     */\n    function tokensToSend(\n        address operator,\n        address from,\n        address to,\n        uint amount,\n        bytes calldata userData,\n        bytes calldata operatorData\n    ) external;\n}\n",
  "sourcePath": "/home/sui41/Documents/cryptogig/aSAPhustle/propertyExchange/property-exchange/contracts/openzeppelin-solidity/contracts/token/ERC777/IERC777Sender.sol",
  "ast": {
    "absolutePath": "project:/contracts/openzeppelin-solidity/contracts/token/ERC777/IERC777Sender.sol",
    "exportedSymbols": {
      "IERC777Sender": [
        11082
      ]
    },
    "id": 11083,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11066,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:162"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@dev Interface of the ERC777TokensSender standard as defined in the EIP.\n * `IERC777` Token holders can be notified of operations performed on their\ntokens by having a contract implement this interface (contract holders can be\n their own implementer) and registering it on the\n[ERC1820 global registry](https://eips.ethereum.org/EIPS/eip-1820).\n * See `IERC1820Registry` and `ERC1820Implementer`.",
        "fullyImplemented": false,
        "id": 11082,
        "linearizedBaseContracts": [
          11082
        ],
        "name": "IERC777Sender",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Called by an `IERC777` token contract whenever a registered holder's\n(`from`) tokens are about to be moved or destroyed. The type of operation\nis conveyed by `to` being the zero address or not.\n     * This call occurs _before_ the token contract's state is updated, so\n`IERC777.balanceOf`, etc., can be used to query the pre-operation state.\n     * This function may revert to prevent the operation from being executed.",
            "id": 11081,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokensToSend",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11068,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 11081,
                  "src": "992:16:162",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "992:7:162",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11070,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 11081,
                  "src": "1018:12:162",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11069,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1018:7:162",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11072,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 11081,
                  "src": "1040:10:162",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11071,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1040:7:162",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11074,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11081,
                  "src": "1060:11:162",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11073,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1060:4:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11076,
                  "name": "userData",
                  "nodeType": "VariableDeclaration",
                  "scope": 11081,
                  "src": "1081:23:162",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 11075,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1081:5:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11078,
                  "name": "operatorData",
                  "nodeType": "VariableDeclaration",
                  "scope": 11081,
                  "src": "1114:27:162",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 11077,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1114:5:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "982:165:162"
            },
            "returnParameters": {
              "id": 11080,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1156:0:162"
            },
            "scope": 11082,
            "src": "961:196:162",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 11083,
        "src": "448:711:162"
      }
    ],
    "src": "0:1160:162"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/openzeppelin-solidity/contracts/token/ERC777/IERC777Sender.sol",
      "exportedSymbols": {
        "IERC777Sender": [
          11082
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".0"
          ]
        },
        "id": 11066,
        "name": "PragmaDirective",
        "src": "0:23:162"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "interface",
          "documentation": "@dev Interface of the ERC777TokensSender standard as defined in the EIP.\n * `IERC777` Token holders can be notified of operations performed on their\ntokens by having a contract implement this interface (contract holders can be\n their own implementer) and registering it on the\n[ERC1820 global registry](https://eips.ethereum.org/EIPS/eip-1820).\n * See `IERC1820Registry` and `ERC1820Implementer`.",
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            11082
          ],
          "name": "IERC777Sender",
          "scope": 11083
        },
        "children": [
          {
            "attributes": {
              "body": null,
              "documentation": "@dev Called by an `IERC777` token contract whenever a registered holder's\n(`from`) tokens are about to be moved or destroyed. The type of operation\nis conveyed by `to` being the zero address or not.\n     * This call occurs _before_ the token contract's state is updated, so\n`IERC777.balanceOf`, etc., can be used to query the pre-operation state.\n     * This function may revert to prevent the operation from being executed.",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "tokensToSend",
              "scope": 11082,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "operator",
                      "scope": 11081,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 11067,
                        "name": "ElementaryTypeName",
                        "src": "992:7:162"
                      }
                    ],
                    "id": 11068,
                    "name": "VariableDeclaration",
                    "src": "992:16:162"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "from",
                      "scope": 11081,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 11069,
                        "name": "ElementaryTypeName",
                        "src": "1018:7:162"
                      }
                    ],
                    "id": 11070,
                    "name": "VariableDeclaration",
                    "src": "1018:12:162"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "to",
                      "scope": 11081,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 11071,
                        "name": "ElementaryTypeName",
                        "src": "1040:7:162"
                      }
                    ],
                    "id": 11072,
                    "name": "VariableDeclaration",
                    "src": "1040:10:162"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "amount",
                      "scope": 11081,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 11073,
                        "name": "ElementaryTypeName",
                        "src": "1060:4:162"
                      }
                    ],
                    "id": 11074,
                    "name": "VariableDeclaration",
                    "src": "1060:11:162"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "userData",
                      "scope": 11081,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 11075,
                        "name": "ElementaryTypeName",
                        "src": "1081:5:162"
                      }
                    ],
                    "id": 11076,
                    "name": "VariableDeclaration",
                    "src": "1081:23:162"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "operatorData",
                      "scope": 11081,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 11077,
                        "name": "ElementaryTypeName",
                        "src": "1114:5:162"
                      }
                    ],
                    "id": 11078,
                    "name": "VariableDeclaration",
                    "src": "1114:27:162"
                  }
                ],
                "id": 11079,
                "name": "ParameterList",
                "src": "982:165:162"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 11080,
                "name": "ParameterList",
                "src": "1156:0:162"
              }
            ],
            "id": 11081,
            "name": "FunctionDefinition",
            "src": "961:196:162"
          }
        ],
        "id": 11082,
        "name": "ContractDefinition",
        "src": "448:711:162"
      }
    ],
    "id": 11083,
    "name": "SourceUnit",
    "src": "0:1160:162"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-01-25T15:02:00.993Z",
  "devdoc": {
    "details": "Interface of the ERC777TokensSender standard as defined in the EIP. * `IERC777` Token holders can be notified of operations performed on their tokens by having a contract implement this interface (contract holders can be their own implementer) and registering it on the [ERC1820 global registry](https://eips.ethereum.org/EIPS/eip-1820). * See `IERC1820Registry` and `ERC1820Implementer`.",
    "methods": {
      "tokensToSend(address,address,address,uint256,bytes,bytes)": {
        "details": "Called by an `IERC777` token contract whenever a registered holder's (`from`) tokens are about to be moved or destroyed. The type of operation is conveyed by `to` being the zero address or not.     * This call occurs _before_ the token contract's state is updated, so `IERC777.balanceOf`, etc., can be used to query the pre-operation state.     * This function may revert to prevent the operation from being executed."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}